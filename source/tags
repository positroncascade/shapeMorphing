!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AIRFOIL_H_	airfoil.h	6;"	d
AOA	airfoil.h	/^void airfoil::AOA(float angle)$/;"	f	class:airfoil
COMMON_H_	common.h	6;"	d
MESHGEN_H_	meshGen.h	4;"	d
NACA4_H_	naca4.h	6;"	d
Ni	airfoil.h	/^   unsigned int Ni;$/;"	m	class:airfoil
Ni	naca4.h	/^   unsigned int Ni;$/;"	m	class:naca4
PARAMETERSTRUCTS_H_	parameterStructs.h	3;"	d
SPLINESHAPE_H_	splineShape.h	3;"	d
airfoil	airfoil.h	/^airfoil::airfoil(float chord,float M, float P, float T,int nodes)$/;"	f	class:airfoil
airfoil	airfoil.h	/^class airfoil {$/;"	c
alpha	airfoil.h	/^   float c,m,p,t,alpha,scale;$/;"	m	class:airfoil
alpha	naca4.h	/^   float c,m,p,t,alpha,scale;$/;"	m	class:naca4
angle	parameterStructs.h	/^    float angle; \/\/angle of attack$/;"	m	struct:naca4parameters
bl_thickness	parameterStructs.h	/^    float bl_thickness;\/\/boundary layer thickness$/;"	m	struct:naca4parameters
blend	splineShape.h	/^double blend(int k, int t, int *u, double v)  \/\/ calculate the blending value$/;"	f
bspline	splineShape.h	/^void bspline(int n, int t, point *control, point *output, int num_output){$/;"	f
c	airfoil.h	/^   float c,m,p,t,alpha,scale;$/;"	m	class:airfoil
c	naca4.h	/^   float c,m,p,t,alpha,scale;$/;"	m	class:naca4
c	parameterStructs.h	/^    float c;$/;"	m	struct:naca4parameters
calcSplines	splineShape.h	/^void splineShape::calcSplines()$/;"	f	class:splineShape
compute_intervals	splineShape.h	/^void compute_intervals(int *u, int n, int t)   \/\/ figure out the knots$/;"	f
compute_point	splineShape.h	/^void compute_point(int *u, int n, int t, double v, point *control,$/;"	f
coordinates	airfoil.h	/^void airfoil::coordinates()$/;"	f	class:airfoil
coordinates	naca4.h	/^void naca4::coordinates()$/;"	f	class:naca4
ctrlP	splineShape.h	/^        int ctrlP;\/\/control points$/;"	m	class:splineShape
displacementStruct	splineShape.h	/^struct displacementStruct{$/;"	s
exportControlPoints	splineShape.h	/^void splineShape::exportControlPoints()$/;"	f	class:splineShape
exportCoordinates	airfoil.h	/^void airfoil::exportCoordinates(const char* filename)$/;"	f	class:airfoil
exportCoordinates	naca4.h	/^void naca4::exportCoordinates(const char* filename)$/;"	f	class:naca4
info	airfoil.h	/^void airfoil::info()$/;"	f	class:airfoil
initialSpline	splineShape.h	/^void splineShape::initialSpline()$/;"	f	class:splineShape
m	airfoil.h	/^   float c,m,p,t,alpha,scale;$/;"	m	class:airfoil
m	naca4.h	/^   float c,m,p,t,alpha,scale;$/;"	m	class:naca4
m	parameterStructs.h	/^    float m;$/;"	m	struct:naca4parameters
main	Cmesh.cpp	/^int main(int argc, char *argv[])$/;"	f
main	main.cpp	/^int main(int argc, const char *argv[])$/;"	f
menu	common.h	/^int menu()$/;"	f
meshGen	airfoil.h	/^void airfoil::meshGen()$/;"	f	class:airfoil
meshGen	naca4.h	/^void naca4::meshGen()$/;"	f	class:naca4
meshGen2	naca4.h	/^void naca4::meshGen2()$/;"	f	class:naca4
modifyControlPoint	splineShape.h	/^void splineShape::modifyControlPoint(int pointID, displacementStruct displacement)$/;"	f	class:splineShape
n	splineShape.h	/^        int n,t,tnp;$/;"	m	class:splineShape
naca4	naca4.h	/^class naca4 {$/;"	c
naca4	naca4.h	/^naca4::naca4 (naca4parameters parameters)$/;"	f	class:naca4
naca4	naca4.h	/^naca4::naca4(float chord,float M, float P, float T, float angle)$/;"	f	class:naca4
naca4parameters	parameterStructs.h	/^naca4parameters::naca4parameters(float C, float M, float P, float T, float AOA, float BL_THICKNESS)$/;"	f	class:naca4parameters
naca4parameters	parameterStructs.h	/^struct naca4parameters{$/;"	s
norm	splineShape.h	/^    double norm;  \/\/modulo del vector.$/;"	m	struct:displacementStruct
outPlot	airfoil.h	/^void airfoil::outPlot()$/;"	f	class:airfoil
outPlot	naca4.h	/^void naca4::outPlot()$/;"	f	class:naca4
p	airfoil.h	/^   float c,m,p,t,alpha,scale;$/;"	m	class:airfoil
p	naca4.h	/^   float c,m,p,t,alpha,scale;$/;"	m	class:naca4
p	parameterStructs.h	/^    float p;$/;"	m	struct:naca4parameters
pi	airfoil.h	/^   static const float pi = 3.1416;$/;"	m	class:airfoil
pi	naca4.h	/^   static const float pi = 3.1416;$/;"	m	class:naca4
plot	splineShape.h	/^void splineShape::plot()$/;"	f	class:splineShape
point	splineShape.h	/^struct point {$/;"	s
print_extended_info	Cmesh.cpp	/^void print_extended_info ()$/;"	f
print_usage	Cmesh.cpp	/^void print_usage (FILE* stream, int exit_code)$/;"	f
program_name	Cmesh.cpp	/^const char* program_name;$/;"	v
pts	splineShape.h	/^        point *pts;          \/\/ puntero de estructuras punto con el que funcionan las funciones.$/;"	m	class:splineShape
q	airfoil.h	/^   int q;$/;"	m	class:airfoil
q	naca4.h	/^   int q;$/;"	m	class:naca4
run	splineShape.h	/^int run()$/;"	f
scale	airfoil.h	/^   float c,m,p,t,alpha,scale;$/;"	m	class:airfoil
scale	naca4.h	/^   float c,m,p,t,alpha,scale;$/;"	m	class:naca4
splineShape	splineShape.h	/^class splineShape : public virtual naca4 {$/;"	c
splineShape	splineShape.h	/^splineShape::splineShape(int controlPoints, naca4parameters parameters):naca4 (parameters)$/;"	f	class:splineShape
t	airfoil.h	/^   float c,m,p,t,alpha,scale;$/;"	m	class:airfoil
t	naca4.h	/^   float c,m,p,t,alpha,scale;$/;"	m	class:naca4
t	parameterStructs.h	/^    float t;$/;"	m	struct:naca4parameters
t	splineShape.h	/^        int n,t,tnp;$/;"	m	class:splineShape
theta	splineShape.h	/^    double theta; \/\/angulo de desplazamiento$/;"	m	struct:displacementStruct
tnp	splineShape.h	/^        int n,t,tnp;$/;"	m	class:splineShape
x	splineShape.h	/^  double x;$/;"	m	struct:point
xl	airfoil.h	/^   double *xl;$/;"	m	class:airfoil
xl	naca4.h	/^   double *xl;$/;"	m	class:naca4
xu	airfoil.h	/^   double *xu;$/;"	m	class:airfoil
xu	naca4.h	/^   double *xu;$/;"	m	class:naca4
y	splineShape.h	/^  double y;$/;"	m	struct:point
z	splineShape.h	/^  double z;$/;"	m	struct:point
zl	airfoil.h	/^   double *zl;$/;"	m	class:airfoil
zl	naca4.h	/^   double *zl;$/;"	m	class:naca4
zu	airfoil.h	/^   double *zu;$/;"	m	class:airfoil
zu	naca4.h	/^   double *zu;$/;"	m	class:naca4
~airfoil	airfoil.h	/^    ~airfoil () {};$/;"	f	class:airfoil
~naca4	naca4.h	/^    ~naca4 () {};$/;"	f	class:naca4
~splineShape	splineShape.h	/^        ~splineShape(){};$/;"	f	class:splineShape
